<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codyy.slr.dao.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.codyy.slr.entity.Resource" >
    <id column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="RESOURCE_NAME" property="resourceName" jdbcType="VARCHAR" />
    <result column="SUBJECT_ID" property="subjectId" jdbcType="VARCHAR" />
    <result column="AUTHOR" property="author" jdbcType="VARCHAR" />
    <result column="THUMB_PATH" property="thumbPath" jdbcType="VARCHAR" />
    <result column="VIEW_CNT" property="viewCnt" jdbcType="DECIMAL" />
    <result column="SOURCE_TYPE" property="sourceType" jdbcType="VARCHAR" />
    <result column="STORE_PATH" property="storePath" jdbcType="VARCHAR" />
    <result column="LIVING_PATH" property="livingPath" jdbcType="VARCHAR" />
    <result column="LIVING_FLAG" property="livingFlag" jdbcType="CHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR" />
    <result column="DELETE_USER_ID" property="deleteUserId" jdbcType="VARCHAR" />
    <result column="DELETE_TIME" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    RESOURCE_ID, RESOURCE_NAME, SUBJECT_ID, AUTHOR, THUMB_PATH, VIEW_CNT, SOURCE_TYPE, 
    STORE_PATH, LIVING_PATH, LIVING_FLAG, DELETE_FLAG, DELETE_USER_ID, DELETE_TIME, CREATE_USER_ID, 
    CREATE_TIME
  </sql>
  
  <select id="getHomeLiveList" resultType="com.codyy.slr.vo.HomeLiveVo">
		select res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,res.LIVING_PATH livingPath,
		sub.SUBJECT_NAME subjectName,
		(select case when count(1)=1 then cl.CLASSLEVEL_NAME else '' end from resource_r_classlevel rrc,classlevel cl
		where rrc.RESOURCE_ID = res.RESOURCE_ID and rrc.CLASSLEVEL_ID = cl.CLASSLEVEL_ID) classlevelName
		from resource res,subject sub where res.SUBJECT_ID = sub.SUBJECT_ID and res.LIVING_FLAG = 'Y' and res.SOURCE_TYPE = 'RECORD'
		order by res.CREATE_TIME desc
	</select>

	<select id="getHomeResourceList" resultType="com.codyy.slr.vo.ResourceVo">
		select * from (select res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,res.STORE_PATH storePath,
		res.THUMB_PATH thumbPath,res.VIEW_CNT viewCnt,sub.SUBJECT_NAME subjectName,
		(select case when count(1)=1 then cl.CLASSLEVEL_NAME else '' end from resource_r_classlevel rrc,classlevel cl
		where rrc.RESOURCE_ID = res.RESOURCE_ID and rrc.CLASSLEVEL_ID = cl.CLASSLEVEL_ID) classlevelName
		from resource res,subject sub where res.SUBJECT_ID = sub.SUBJECT_ID and res.LIVING_FLAG = 'N'
		order by res.CREATE_TIME desc) tmp limit 0,8
	</select>
  
  <!-- 添加资源 -->
   <insert id="addResource" parameterType="com.codyy.slr.entity.Resource" >
    insert into resource (RESOURCE_ID, RESOURCE_NAME, SUBJECT_ID, 
      AUTHOR, THUMB_PATH, VIEW_CNT, 
      SOURCE_TYPE, STORE_PATH, LIVING_PATH, 
      LIVING_FLAG, DELETE_USER_ID, 
      DELETE_TIME, CREATE_USER_ID, CREATE_TIME
      )
    values (#{resourceId,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{subjectId,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{thumbPath,jdbcType=VARCHAR}, #{viewCnt,jdbcType=DECIMAL}, 
      #{sourceType,jdbcType=VARCHAR}, #{storePath,jdbcType=VARCHAR}, #{livingPath,jdbcType=VARCHAR}, 
      #{livingFlag,jdbcType=CHAR}, #{deleteUserId,jdbcType=VARCHAR}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <!-- 批量插入资源和年级关系数据 -->
  <insert id="addResIdClslevelIdList" parameterType="java.util.List" >
	  insert into resource_r_classlevel (resource_id, classlevel_id)   
	    values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	       (#{item.resourceId}, #{item.classlevelId}) 
	    </foreach>  
  </insert>
  
  <!-- 通过资源id删除资源 -->
  <delete id="delResByResId" parameterType="java.lang.String" >
    delete from resource
    where RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
  </delete>
</mapper>