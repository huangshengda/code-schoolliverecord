<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codyy.slr.dao.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.codyy.slr.entity.Resource" >
    <id column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="RESOURCE_NAME" property="resourceName" jdbcType="VARCHAR" />
    <result column="SUBJECT_ID" property="subjectId" jdbcType="VARCHAR" />
    <result column="AUTHOR" property="author" jdbcType="VARCHAR" />
    <result column="THUMB_PATH" property="thumbPath" jdbcType="VARCHAR" />
    <result column="VIEW_CNT" property="viewCnt" jdbcType="DECIMAL" />
    <result column="SOURCE_TYPE" property="sourceType" jdbcType="VARCHAR" />
    <result column="STORE_PATH" property="storePath" jdbcType="VARCHAR" />
    <result column="LIVING_PATH" property="livingPath" jdbcType="VARCHAR" />
    <result column="LIVING_FLAG" property="livingFlag" jdbcType="CHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR" />
    <result column="DELETE_USER_ID" property="deleteUserId" jdbcType="VARCHAR" />
    <result column="DELETE_TIME" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    RESOURCE_ID, RESOURCE_NAME, SUBJECT_ID, AUTHOR, THUMB_PATH, VIEW_CNT, SOURCE_TYPE, 
    STORE_PATH, LIVING_PATH, LIVING_FLAG, DELETE_FLAG, DELETE_USER_ID, DELETE_TIME, CREATE_USER_ID, 
    CREATE_TIME
  </sql>
  
  <select id="getHomeLiveList" resultType="com.codyy.slr.vo.HomeLiveVo">
		SELECT res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,res.LIVING_PATH livingPath,
		sub.SUBJECT_NAME subjectName,
		GROUP_CONCAT(cl.CLASSLEVEL_NAME ORDER BY cl.SORT ASC SEPARATOR '/') classlevelName
		FROM resource res LEFT JOIN subject sub ON res.SUBJECT_ID = sub.SUBJECT_ID JOIN resource_r_classlevel rrc 
		ON res.RESOURCE_ID=rrc.RESOURCE_ID JOIN classlevel cl ON rrc.CLASSLEVEL_ID=cl.CLASSLEVEL_ID
    	WHERE res.LIVING_FLAG = 'Y' AND res.DELETE_FLAG='N' AND res.SOURCE_TYPE = 'RECORD'
    	GROUP BY res.RESOURCE_ID
		ORDER BY res.CREATE_TIME DESC
	</select>
  	
  	<select id="getResourcePageList" resultType="com.codyy.slr.vo.ResourceVo" parameterType="com.codyy.slr.common.page.Page">
		select res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,res.STORE_PATH storePath,
		res.THUMB_PATH thumbPath,res.VIEW_CNT viewCnt,sub.SUBJECT_NAME subjectName,u.REALNAME creatName,
		GROUP_CONCAT(cl.CLASSLEVEL_NAME ORDER BY cl.SORT ASC SEPARATOR '/') classlevelName
		from resource res left join user u on res.CREATE_USER_ID = u.USER_ID left join subject sub on res.SUBJECT_ID = sub.SUBJECT_ID 
		JOIN resource_r_classlevel rrc ON res.RESOURCE_ID=rrc.RESOURCE_ID JOIN classlevel cl ON
		rrc.CLASSLEVEL_ID=cl.CLASSLEVEL_ID
		where res.LIVING_FLAG = 'N' and res.DELETE_FLAG='N'
		<if test="map != null and map.classlevelId != null and map.classlevelId != ''">
			and res.RESOURCE_ID in (select rrcl.RESOURCE_ID from resource_r_classlevel rrcl where rrcl.CLASSLEVEL_ID=#{map.classlevelId})
		</if>
		<if test="map != null and map.subjectId != null and map.subjectId != ''">
			and res.SUBJECT_ID=#{map.subjectId}
		</if>
		<if test="map != null and map.sourceType != null and map.sourceType != ''">
			and res.SOURCE_TYPE=#{map.sourceType}
		</if>
		<if test="map != null and map.resourceNameKey != null and map.resourceNameKey != ''">
			and res.RESOURCE_NAME like CONCAT('%',#{map.resourceNameKey},'%') ESCAPE '/' 
		</if>
		<if test="map != null and map.authorKey != null and map.authorKey != ''">
			and res.AUTHOR like CONCAT('%',#{map.authorKey},'%') ESCAPE '/'
		</if>
		<if test="map != null and map.createUserId != null and map.createUserId != ''">
			and res.CREATE_USER_ID = #{map.createUserId}
		</if>
		GROUP BY res.RESOURCE_ID
		order by res.CREATE_TIME desc
	</select>
  	
  	<!-- 根据资源ID获取资源 -->
  	<select id="getResource" resultType="com.codyy.slr.vo.ResourceVo" parameterType="java.lang.String">
		select res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,
		(case when res.LIVING_FLAG = 'Y' then res.LIVING_PATH else res.STORE_PATH end) storePath,
		res.THUMB_PATH thumbPath,res.VIEW_CNT viewCnt,sub.SUBJECT_NAME subjectName,u.REALNAME creatName,
		GROUP_CONCAT(cl.CLASSLEVEL_NAME ORDER BY cl.SORT ASC SEPARATOR '/') classlevelName
		from resource res left join user u on res.CREATE_USER_ID = u.USER_ID left join subject sub on res.SUBJECT_ID = sub.SUBJECT_ID 
		JOIN resource_r_classlevel rrc ON res.RESOURCE_ID=rrc.RESOURCE_ID JOIN classlevel cl ON
		rrc.CLASSLEVEL_ID=cl.CLASSLEVEL_ID
		where res.RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
		GROUP BY res.RESOURCE_ID
	</select>
  	
  <!-- 添加资源 -->
   <insert id="addResource" parameterType="com.codyy.slr.entity.Resource" >
    insert into resource (RESOURCE_ID, RESOURCE_NAME, SUBJECT_ID, 
      AUTHOR, THUMB_PATH, VIEW_CNT, 
      SOURCE_TYPE, STORE_PATH, LIVING_PATH, 
      LIVING_FLAG, DELETE_USER_ID, 
      DELETE_TIME, CREATE_USER_ID, CREATE_TIME
      )
    values (#{resourceId,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{subjectId,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{thumbPath,jdbcType=VARCHAR}, #{viewCnt,jdbcType=DECIMAL}, 
      #{sourceType,jdbcType=VARCHAR}, #{storePath,jdbcType=VARCHAR}, #{livingPath,jdbcType=VARCHAR}, 
      #{livingFlag,jdbcType=CHAR}, #{deleteUserId,jdbcType=VARCHAR}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <!-- 批量插入资源和年级关系数据 -->
  <insert id="addResIdClslevelIdList" parameterType="java.util.List" >
	  insert into resource_r_classlevel (resource_id, classlevel_id)   
	    values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	       (#{item.resourceId}, #{item.classlevelId}) 
	    </foreach>  
  </insert>
  
  <!-- 通过资源id删除资源(逻辑删除) -->
  <delete id="delResByResId" parameterType="com.codyy.slr.entity.Resource" >
    UPDATE resource SET DELETE_FLAG='Y',DELETE_USER_ID=#{deleteUserId,jdbcType=VARCHAR},
    DELETE_TIME=#{deleteTime,jdbcType=TIMESTAMP} WHERE RESOURCE_ID=#{resourceId,jdbcType=VARCHAR}
  </delete>
  
  <!-- 资源推荐 -->
  <select id="getRelatedSameAttrResourceList" parameterType="java.util.Map" resultType="com.codyy.slr.vo.ResourceVo">
  
  
  <!-- select res.RESOURCE_ID resourceId,res.RESOURCE_NAME resourceName,res.AUTHOR author,res.STORE_PATH storePath,
		res.THUMB_PATH thumbPath,res.VIEW_CNT viewCnt,sub.SUBJECT_NAME subjectName,u.REALNAME creatName,
		GROUP_CONCAT(cl.CLASSLEVEL_NAME ORDER BY cl.SORT ASC SEPARATOR '/') classlevelName
		from 
	  (
	  	select res.resource_id from resource r 
	  		where r.LIVING_FLAG = 'N' AND r.DELETE_FLAG='N' 
			order by  (1
					  + (case r.subject_id when (select subject_id where resource_id = = #{resourceId}) then 10 else 0 end)
					  + (case  when r.subject_id in (select classlevel_id where resource_id = #{resourceId})  then 10 else 0 end)
	       ) LIMIT 0,5
	   )  t left join on resource res  t.resource_id = res.resource_id 
   			left join user u on res.CREATE_USER_ID = u.USER_ID left join subject sub on res.SUBJECT_ID = sub.SUBJECT_ID 
			JOIN resource_r_classlevel rrc ON res.RESOURCE_ID=rrc.RESOURCE_ID JOIN classlevel cl ON
			rrc.CLASSLEVEL_ID=cl.CLASSLEVEL_ID
   GROUP BY res.RESOURCE_ID -->
	   
  </select>
</mapper>